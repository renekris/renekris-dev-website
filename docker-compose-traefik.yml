services:
  traefik:
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.minecraft.address=:25565"
      - "--entrypoints.tarkov.address=:6969"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@renekris.dev"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
    ports:
      - "80:80"
      - "443:443" 
      - "25565:25565"
      - "6969:6969"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
      - "./traefik:/etc/traefik/dynamic:ro"
    restart: unless-stopped
    networks:
      - traefik

  web-blue:
    build: .
    container_name: renekris-web-blue
    restart: unless-stopped
    environment:
      - DEPLOYMENT_SLOT=blue
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-blue.rule=Host(`renekris.dev`)"
      - "traefik.http.routers.web-blue.entrypoints=websecure"
      - "traefik.http.routers.web-blue.tls.certresolver=letsencrypt"
      - "traefik.http.routers.web-blue.service=web-blue"
      - "traefik.http.routers.web-blue.priority=100"
      - "traefik.http.services.web-blue.loadbalancer.server.port=80"
      # Proxy for status API to avoid CORS
      - "traefik.http.routers.status-api-blue.rule=Host(`renekris.dev`) && PathPrefix(`/api/status`)"
      - "traefik.http.routers.status-api-blue.entrypoints=websecure"
      - "traefik.http.routers.status-api-blue.tls.certresolver=letsencrypt"
      - "traefik.http.routers.status-api-blue.service=uptime-kuma-service"
      - "traefik.http.routers.status-api-blue.priority=100"
      - "traefik.http.services.uptime-kuma-service.loadbalancer.server.port=3001"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.web-blue-http.rule=Host(`renekris.dev`)"
      - "traefik.http.routers.web-blue-http.entrypoints=web"
      - "traefik.http.routers.web-blue-http.middlewares=web-redirect"
      - "traefik.http.routers.web-blue-http.priority=100"
      - "traefik.http.middlewares.web-redirect.redirectscheme.scheme=https"
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-green:
    build: .
    container_name: renekris-web-green
    restart: unless-stopped
    environment:
      - DEPLOYMENT_SLOT=green
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-green.rule=Host(`renekris.dev`)"
      - "traefik.http.routers.web-green.entrypoints=websecure"
      - "traefik.http.routers.web-green.tls.certresolver=letsencrypt"
      - "traefik.http.routers.web-green.service=web-green"
      - "traefik.http.routers.web-green.priority=50"
      - "traefik.http.services.web-green.loadbalancer.server.port=80"
      # Proxy for status API to avoid CORS
      - "traefik.http.routers.status-api-green.rule=Host(`renekris.dev`) && PathPrefix(`/api/status`)"
      - "traefik.http.routers.status-api-green.entrypoints=websecure"
      - "traefik.http.routers.status-api-green.tls.certresolver=letsencrypt"
      - "traefik.http.routers.status-api-green.service=uptime-kuma-service"
      - "traefik.http.routers.status-api-green.priority=50"
      - "traefik.http.services.uptime-kuma-service.loadbalancer.server.port=3001"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.web-green-http.rule=Host(`renekris.dev`)"
      - "traefik.http.routers.web-green-http.entrypoints=web"
      - "traefik.http.routers.web-green-http.middlewares=web-redirect"
      - "traefik.http.routers.web-green-http.priority=50"
      - "traefik.http.middlewares.web-redirect.redirectscheme.scheme=https"
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
      - ./uptime-kuma-data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.status.rule=Host(`status.renekris.dev`)"
      - "traefik.http.routers.status.entrypoints=websecure"
      - "traefik.http.routers.status.tls.certresolver=letsencrypt"
      - "traefik.http.services.status.loadbalancer.server.port=3001"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.status-http.rule=Host(`status.renekris.dev`)"
      - "traefik.http.routers.status-http.entrypoints=web"
      - "traefik.http.routers.status-http.middlewares=status-redirect"
      - "traefik.http.middlewares.status-redirect.redirectscheme.scheme=https"
    networks:
      - traefik

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: unless-stopped
    environment:
      - CF_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAINS=${CLOUDFLARE_DOMAINS}
      - PROXIED=${CLOUDFLARE_PROXIED}

networks:
  traefik:
    external: false

# Volumes now use local directories for persistence