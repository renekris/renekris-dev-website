name: Simple CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: renekris/renekris-dev-website

jobs:
  build-and-deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests in parallel
      run: |
        npm run lint &
        npm test -- --coverage --watchAll=false &
        wait

    - name: Build application
      run: npm run build

    - name: Set environment and image tag
      id: env
      run: |
        if [ "${{ github.ref_name }}" = "main" ]; then
          echo "environment=production" >> $GITHUB_OUTPUT
          echo "tag=production-latest" >> $GITHUB_OUTPUT
        else
          echo "environment=staging" >> $GITHUB_OUTPUT
          echo "tag=staging-latest" >> $GITHUB_OUTPUT
        fi

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.env.outputs.tag }}

    - name: Security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.env.outputs.tag }}
        format: 'table'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'

    - name: Deploy notification
      if: success()
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.INFRASTRUCTURE_DISPATCH_TOKEN }}
        repository: renekris/renekris-infrastructure
        event-type: deploy-infrastructure
        client-payload: |
          {
            "environment": "${{ steps.env.outputs.environment }}",
            "image_tag": "${{ steps.env.outputs.tag }}",
            "commit_sha": "${{ github.sha }}"
          }

    - name: Health check
      if: steps.env.outputs.environment == 'staging'
      run: |
        echo "Waiting for deployment..."
        sleep 60
        for i in {1..3}; do
          if curl -f https://staging.renekris.dev/health; then
            echo "✅ Staging deployment successful!"
            exit 0
          fi
          sleep 30
        done
        echo "❌ Health check failed"
        exit 1