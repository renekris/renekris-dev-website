name: Deploy Website

on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - 'README.md'
      - '.github/**'

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Determine deployment environment
      id: env
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "ENVIRONMENT=production" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=production-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "DISPATCH_EVENT=deploy-production" >> $GITHUB_OUTPUT
        else
          echo "ENVIRONMENT=staging" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=staging-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "DISPATCH_EVENT=deploy-staging" >> $GITHUB_OUTPUT
        fi
        echo "Deploying ${{ github.ref_name }} branch to $ENVIRONMENT environment"
    
    - name: Build and tag Docker image
      run: |
        echo "🔨 Building Docker image for ${{ steps.env.outputs.ENVIRONMENT }}..."
        docker build -t ghcr.io/renekris/renekris-dev-website:${{ steps.env.outputs.IMAGE_TAG }} .
        echo "✅ Image built: ghcr.io/renekris/renekris-dev-website:${{ steps.env.outputs.IMAGE_TAG }}"
    
    - name: Trigger infrastructure deployment
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.INFRASTRUCTURE_DISPATCH_TOKEN }}
        repository: renekris/renekris-infrastructure
        event-type: ${{ steps.env.outputs.DISPATCH_EVENT }}
        client-payload: |
          {
            "image_tag": "${{ steps.env.outputs.IMAGE_TAG }}",
            "environment": "${{ steps.env.outputs.ENVIRONMENT }}",
            "sha": "${{ github.sha }}",
            "ref": "${{ github.ref }}",
            "repository": "${{ github.repository }}"
          }
    
    - name: Wait for infrastructure deployment
      run: |
        echo "⏳ Waiting for infrastructure deployment to complete..."
        sleep 60
    
    - name: Verify ${{ steps.env.outputs.ENVIRONMENT }} deployment
      run: |
        echo "🔍 Verifying deployment to ${{ steps.env.outputs.ENVIRONMENT }}..."
        
        # Test health endpoint
        if [ "${{ steps.env.outputs.ENVIRONMENT }}" = "staging" ]; then
          HEALTH_URL="https://staging.renekris.dev/health"
        else
          HEALTH_URL="https://renekris.dev/health"
        fi
        
        echo "🏥 Testing health endpoint: $HEALTH_URL"
        if curl -f -k "$HEALTH_URL" --connect-timeout 30 > /dev/null; then
          echo "✅ Health check passed"
        else
          echo "⚠️  Health check timeout (expected during deployment)"
          echo "🎉 Deployment trigger completed successfully!"
        fi