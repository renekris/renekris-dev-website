name: Deploy to Docker Swarm

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        echo "🔧 Building Docker image..."
        docker build -t renekris-web:${{ github.sha }} .
        docker tag renekris-web:${{ github.sha }} renekris-web:latest
      
    - name: Deploy to Docker Swarm
      run: |
        echo "🚀 Starting Docker Swarm rolling update..."
        
        # Check if stack exists
        if docker stack ls --format "{{.Name}}" | grep -q "^renekris$"; then
          echo "🔄 Stack exists - performing rolling update..."
          
          # Update the web service with new image
          docker service update --image renekris-web:${{ github.sha }} renekris_web
          
          # Wait for rolling update to complete
          echo "⏳ Waiting for rolling update to complete..."
          timeout 300 bash -c '
            while [ "$(docker service ls --filter name=renekris_web --format "{{.Replicas}}" | cut -d"/" -f1)" != "$(docker service ls --filter name=renekris_web --format "{{.Replicas}}" | cut -d"/" -f2)" ]; do
              echo "   Rolling update in progress..."
              sleep 10
            done
          '
          
          echo "✅ Rolling update completed"
          
        else
          echo "🆕 Deploying new stack..."
          docker stack deploy -c docker-stack.yml renekris
          
          echo "⏳ Waiting for stack deployment..."
          sleep 30
          
          echo "✅ Stack deployment completed"
        fi
      
    - name: Verify deployment
      run: |
        echo "🔍 Verifying deployment..."
        
        # Check service status
        echo "📊 Service status:"
        docker service ls --filter label=com.docker.stack.namespace=renekris
        
        # Test health endpoint
        if curl -s -f -H "Host: renekris.dev" http://localhost/health >/dev/null 2>&1; then
          echo "✅ Health endpoint responding"
        else
          echo "⚠️ Health endpoint not responding"
        fi
        
        echo "🎉 Deployment verification completed!"
        echo "🌐 Website: https://renekris.dev"
        echo "📊 Status: https://status.renekris.dev"
    
    - name: Cleanup old images
      run: |
        echo "🧹 Cleaning up old Docker images..."
        # Keep latest 3 images, remove older ones
        docker images renekris-web --format "table {{.Repository}}:{{.Tag}}\t{{.CreatedAt}}" | grep -v "latest" | tail -n +4 | awk '{print $1}' | xargs -r docker rmi || true
        echo "✅ Cleanup completed"