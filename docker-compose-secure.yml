version: "3.8"

networks:
  web:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

services:
  caddy:
    image: ghcr.io/roamer7038/caddy-l4-docker:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "25565:25565"  # Minecraft port (Layer 4)
      - "6969:6969"    # Tarkov port (Layer 4)
    volumes:
      - ./caddy.yaml:/etc/caddy/caddy.yaml:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./simple-site.html:/srv/simple-site.html:ro
      - /opt/renekris-dev-staging:/opt/renekris-dev-staging:ro
    command: run --config /etc/caddy/caddy.yaml --adapter yaml
    networks:
      - web

  cloudflare-ddns-proxied:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns-proxied
    restart: unless-stopped
    environment:
      - CF_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAINS=renekris.dev,status.renekris.dev
      - PROXIED=true
      - IP6_PROVIDER=none
    networks:
      - web

  cloudflare-ddns-direct:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns-direct
    restart: unless-stopped
    environment:
      - CF_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAINS=mc.renekris.dev,tarkov.renekris.dev
      - PROXIED=false
      - IP6_PROVIDER=none
    networks:
      - web

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./uptime-kuma-data:/app/data
    networks:
      - web

  # Testing environment
  playwright:
    image: mcr.microsoft.com/playwright:v1.40.0-jammy
    container_name: website-testing
    restart: "no"
    working_dir: /tests
    volumes:
      - ./:/tests
      - ./test-results:/tests/test-results
      - ./playwright-report:/tests/playwright-report
    environment:
      - CI=true
    networks:
      - web
    profiles:
      - testing

  # Development server (internal access only)
  dev-server:
    image: nginx:alpine
    container_name: dev-server
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - /opt/renekris-dev-staging:/usr/share/nginx/html:ro
    networks:
      - web